Metadata-Version: 1.0
Name: diazo
Version: 1.0b1
Summary: Diazo implements a Deliverance like language using a pure XSLT engine. With Diazo, you
"compile" your theme and ruleset in one step, then use a superfast/simple
transform on each request thereafter. Alternatively, compile your theme during
development, check it into Subversion, and not touch Diazo during deployment.
Home-page: UNKNOWN
Author: Paul Everitt, Laurence Rowe and Martin Aspeli.
Author-email: laurence@lrowe.co.uk
License: New BSD
Description: ==============================================
        Diazo - We Write XSLT, So You Don't Have Toâ„¢
        ==============================================
        
        Diazo allows you to apply a theme contained in a static HTML web page to a
        dynamic website created using any server-side technology. With Diazo, you can
        take an HTML wireframe created by a web designer and turn it into a theme for
        your favourite CMS, redesign the user interface of a legacy web application
        without even having access to the original source code, or build a unified
        user experience across multiple disparate systems, all in a matter of hours,
        not weeks.
        
        When using Diazo, you will work with syntax and concepts familiar from working
        with HTML and CSS. And by allowing you seamlessly integrate XSLT into your
        rule files, Diazo makes common cases simple and complex requirements possible.
        
        For detailed documentation, please see diazo.org_.
        
        .. _diazo.org: http://diazo.org
        
        
        
        Changelog
        =========
        
        1.0b1 - 2011-04-22
        ------------------
        
        * Updated css namespace url to http://namespaces.plone.org/diazo/css
        
        * Added <replace content="...">...</replace> directive.
        
        * Added the ``wsgi`` module, which contains a WSGI middleware filter for
          applying a Diazo themes, as well as a lower level one for applying an
          XSLT transformation to HTML output.
        
        * Moved documentation from the README to the diazo.org website. See
          http://svn.plone.org/svn/plone/plone.org/diazo-docs/trunk.
        
        * Added ``<merge />`` directive
        
        * Added ``<notheme />`` directive
        
        * Added ``<strip />`` directive
        
        * Revised rule set to be based on ``theme-children`` and ``content-children``
          and an explicit ``attributes`` parameter. ``<copy />`` is now only used for
          copying of attributes. ``<prepend />`` and ``<append />`` are deprecated
          in favour of ``<before />`` and ``<after />`` using ``theme-children``.
        
        * Use experimental.cssselect to better work with location paths.
        
        * Renamed XDV to Diazo.
        
        0.4b3 - 2010-09-09
        ------------------
        
        * Path conditions with @if-path.
        
        * Serialize using XSLT method in diazorun to respect <xsl:output method="html"/>
        
        * Fix for default theme.
        
        * Fix for themes in nested rules tags.
        
        0.4b2 - 2010-08-16
        ------------------
        
        * When no conditional themes match, pass the document through without theming.
        
        * Fix loading of compiler stylesheets so as not to be affected by resolvers.
        
        0.4b1 - 2010-08-06
        ------------------
        
        * Multistage compiler breaks down work into smaller, more easily debugged
          chunks. (In the spirit of the original DVNG prototype.)
        
        * Refactoring of generated XSLT to perform its work in a single pass, bringing
          a 30-50% speedup.
        
        * Multiple theme support using the new <theme> directive.
        
        * Nested <rules> and condition merging allows for condition grouping.
        
        * Allow comments to be selected in the theme.
        
        * Tweaked ``ssi`` includemode for Apache compatibility. The previous
          ``wait="yes"`` behaviour no longer seems necessary with current versions of
          Nginx, but is available using the ``ssiwait`` includemode.
        
        * CSS expressions are now converted to relative rather than absolute xpaths.
          While this makes no difference to their use in diazo directives (which are
          executed in the context of the root node), more flexibility is available
          when used with inline XSL.
        
Platform: UNKNOWN
